/*index page*/
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Blogging Platform</title>
</head>
<body>
    <header>    <h1>Blogging Platform</h1>    
        <nav>
            <a href="index.html">Home</a>
            <a href="signup.html">Sign Up</a>
            <a href="login.html">Login</a>
            <a href="post.html">New Post</a>
            <a href="delete.html">delete Post</a>
            
            
        </nav>
        <script src="js/app.js"></script>
    </header>
    <main>
        <div id="posts"></div>
    </main>
    <script src="js/app.js"></script>
    <script src="server.js"></script>
</body>
</html>
/*signpu page*/
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Sign Up</title>
</head>
<body>
    <header>
       
        <nav>
            <a href="index.html">Home</a>
            <a href="signup.html">Sign Up</a>
            <a href="login.html">Login</a>
            <a href="post.html">New Post</a>
            <a href="delete.html">delete Post</a>
        </nav>
        <h1>Sign Up for Blog</h1>
    </header>
    <main>
        <form id="signupForm">
            <input type="text" id="username" placeholder="Username" required>
            <input type="password" id="password" placeholder="Password" required>
            <button type="submit">Sign Up</button>
        </form>
      
    </main>
    <script src="js/app.js"></script>
</body>
</html>
/*loging page*/
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Login</title>
</head>
<body>
    <header>        
        <nav>
            <a href="index.html">Home</a>
            <a href="signup.html">Sign Up</a>
            <a href="login.html">Login</a>
            <a href="post.html">New Post</a>
            <a href="delete.html">delete Post</a>
        </nav>
        <h1>Login for Blog</h1>
    </header>
    <main>
        <form id="loginForm">
            <input type="text" id="username" placeholder="Username" required>
            <input type="password" id="password" placeholder="Password" required>
            <button type="submit">Login</button>
        </form>
        <p id="errorMessage" style="color: red;"></p>
    </main>
    <script src="js/app.js"></script>
</body>
</html>
/*post page*/
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Create Post</title>
</head>
<body>
    <header>
        
        <nav>
            <a href="index.html">Home</a>
            <a href="signup.html">Sign Up</a>
            <a href="login.html">Login</a>
            <a href="post.html">New Post</a>
            <a href="delete.html">delete Post</a>
        </nav>
        <h1>Create New Post</h1>
    </header>
    <main>
        <form id="postForm">
            <input type="text" id="title" placeholder="Title" required>
            <textarea id="content" placeholder="Content" required></textarea>
            <button type="submit">Create Post</button>
        </form>
    </main>
    <script src="js/app.js"></script>
</body>
</html>
/*delete page*/
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Delete Post</title>

    <style>
    </style>
</head>
<body>
    <header>
        
        <nav>
            <a href="index.html">Home</a>
            <a href="signup.html">Sign Up</a>
            <a href="login.html">Login</a>
            <a href="post.html">New Post</a>
            <a href="delete.html">delete Post</a>            
        </nav>
        <h1>Delete Blog Post</h1>
    </header>
    <div class="container">
        <main>
        <form id="deletePostForm">
            <label for="postId">Post ID</label>
            <input type="text" id="postId" name="postId" required>
            <button type="submit">Delete Post</button>
        </form>
    </main>
        <p id="response"></p>
    </div>

    <script>
        document.getElementById('deletePostForm').addEventListener('submit', async function(event) {
            event.preventDefault();
            const postId = document.getElementById('postId').value;

            try {
                const response = await fetch(/api/posts/${postId}, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'x-auth-token': localStorage.getItem('token') // Assuming you store the JWT in localStorage
                    }
                });

                const result = await response.json();

                if (response.status === 200) {
                    document.getElementById('response').innerText = 'Post deleted successfully';
                } else {
                    document.getElementById('response').innerText = Error: ${result.msg};
                }
            } catch (error) {
                console.error('Error deleting post:', error);
                document.getElementById('response').innerText = 'Error deleting post';
            }
        });
    </script>
</body>
</html>
/*css*//* General Styles */
body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    background-image:url('../avatar.jpg');
    color: #333;
}

header {
    background-color: rgba(0, 0, 0, 0.1);
    color: white;    
    padding-top:30px;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

header h1 {
    margin-top: 200px;
    font-size: 2rem;
    padding-bottom: 10px
}

nav a {
    color: rgb(255, 6, 6);
    padding: 20px;
    margin: 10px;
    text-decoration:solid ;
    font-weight: bold;
}

nav a:hover {
    text-decoration: underline;
}

/* Main Content Styles */
main {
    padding: 10px;
    max-width: 800px;
    margin: 10px auto;
}

form {
    background: rgba(0, 0, 0, 0.1);
    padding: 20px;
    border-radius: 100px;
    box-shadow: rgba(0, 0, 0, 0.1);
    margin-bottom: 10px;
}

form input,
form button {
    width: 100%;
    padding: 10px;
    margin-bottom: 1rem;
    border: 1px solid #ddd;
    border-radius: 100px;
    font-size: 1rem;
}

form button {
    background-color: rgba(0, 0, 0, 0.1);
    color: rgb(0, 247, 95);
    border: none;
    cursor: pointer;
}

form button:hover {
    background-color: #4b7070;
}

/* Post Styles */
#posts .post {
    background: rgba(0, 0, 0, 0.1);
    margin: 10rem ;
    padding: 1rem;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.post h2 {
    margin: 0 0 1rem;
    font-size: 1.5rem;
    color: #cc0a6b;
}

.post p {
    margin: 0 0 1rem;
}

.post small {
    display: block;
    color: #ff0000;
    margin-top: 1px;
}

/* Footer Styles */
footer {
    background-color: rgba(126, 6, 6, 0.1);
    color: rgba(0, 0, 0, 0.1); ;
    text-align: center;
    padding: 1rem;
    position: fixed;
    width: 100%;
    bottom: 0;
}

footer p {
    margin: 0;
}
/*js*/
document.addEventListener('DOMContentLoaded', () => {
    const postForm = document.getElementById('postForm');
    
    if (postForm) {
        postForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const title = document.getElementById('title').value;
            const content = document.getElementById('content').value;

            const response = await fetch('/posts', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ title, content, author: 'User' }) // Replace 'User' with the actual username from the session
            });

            if (response.ok) {
                window.location.href = 'index.html';
            } else {
                alert('Failed to create post');
            }
        });
    }

    fetch('/posts')
        .then(response => response.json())
        .then(posts => {
            const postsContainer = document.getElementById('posts');
            if (postsContainer) {
                postsContainer.innerHTML = posts.map(post => `
                    <div class="post">
                        <h2>${post.title}</h2>
                        <p>${post.content}</p>
                        <small>by ${post.author}</small>
                    </div>
                `).join('');
            }
        });
});
